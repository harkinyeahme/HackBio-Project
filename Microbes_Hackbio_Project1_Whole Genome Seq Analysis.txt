#!/bin/bash

# Automated WGS Workflow Script (Paired-end only)
# Author: Olanrewaju Akinyemi
# Description: Performs FastQC, fastp trimming, MultiQC report generation,
# SPAdes assembly, QUAST quality check, and Abricate AMR/VF analysis.

set -euo pipefail
IFS=$'\n\t'

# -----------------------------
# Step 0: Setup & download data
# -----------------------------
echo "[INFO] Setting up directories..."
mkdir -p raw_reads fastqc_reports trimmed_reads fastp_reports multiqc_reports assembly AMR VF quast_reports

echo "[INFO] Downloading raw data..."
wget https://raw.githubusercontent.com/HackBio-Internship/2025_project_collection/refs/heads/main/SA_Polony_100_download.sh
bash SA_Polony_100_download.sh
mv *fastq.gz raw_reads/

# -----------------------------
# Step 1: FastQC on raw reads
# -----------------------------
echo "[INFO] Running FastQC on raw reads..."
for R1 in raw_reads/*_1.fastq.gz; do
    [[ -f "$R1" ]] || continue
    SAMPLE=$(basename "$R1" _1.fastq.gz)
    R2="raw_reads/${SAMPLE}_2.fastq.gz"

    fastqc "$R1" "$R2" -o fastqc_reports
    echo "[INFO] FastQC completed for sample: $SAMPLE"
done

multiqc fastqc_reports/ -o multiqc_reports/

# -----------------------------
# Step 2: Trim reads with fastp
# -----------------------------
echo "[INFO] Starting read trimming with fastp..."
for R1 in raw_reads/*_1.fastq.gz; do
    [[ -f "$R1" ]] || continue
    SAMPLE=$(basename "$R1" _1.fastq.gz)
    R2="raw_reads/${SAMPLE}_2.fastq.gz"

    fastp \
        -i "$R1" \
        -I "$R2" \
        -o "trimmed_reads/${SAMPLE}_1.trimmed.fastq.gz" \
        -O "trimmed_reads/${SAMPLE}_2.trimmed.fastq.gz" \
        -h "fastp_reports/${SAMPLE}.html" \
        -j "fastp_reports/${SAMPLE}.json"

    echo "[INFO] fastp trimming completed for sample: $SAMPLE"
done

multiqc fastp_reports/ -o multiqc_reports/

# -----------------------------
# Step 3: De novo assembly with SPAdes
# -----------------------------
echo "[INFO] Starting genome assembly with SPAdes..."
for R1 in trimmed_reads/*_1.trimmed.fastq.gz; do
    [[ -f "$R1" ]] || continue
    SAMPLE=$(basename "$R1" _1.trimmed.fastq.gz)
    R2="trimmed_reads/${SAMPLE}_2.trimmed.fastq.gz"

    spades.py \
        -1 "$R1" \
        -2 "$R2" \
        -o "assembly/$SAMPLE" \
        --phred-offset 33

    echo "[INFO] Assembly completed for $SAMPLE"
done

# -----------------------------
# Step 4: QUAST quality check
# -----------------------------
echo "[INFO] Running QUAST on assemblies..."
for file in assembly/*/contigs.fasta; do
    SAMPLE=$(basename "$(dirname "$file")")
    quast.py "$file" -o quast_reports/$SAMPLE
    echo "[INFO] QUAST completed for $SAMPLE"
done

quast.py assembly/*/contigs.fasta -o quast_reports/combined
multiqc quast_reports/ -o quast_reports/

# -----------------------------
# Step 5: Abricate (AMR + VF)
# -----------------------------
echo "[INFO] Running Abricate for AMR genes..."
for file in assembly/*/contigs.fasta; do
    SAMPLE=$(basename "$(dirname "$file")")
    abricate "$file" > AMR/${SAMPLE}_amr.tab
done
abricate --summary AMR/*.tab > AMR/abricate_summary.amr.tab

echo "[INFO] Running Abricate for virulence genes..."
for file in assembly/*/contigs.fasta; do
    SAMPLE=$(basename "$(dirname "$file")")
    abricate --db vfdb "$file" > VF/${SAMPLE}_vf.tab
done
abricate --summary VF/*.tab > VF/abricate_summary.vf.tab

# -----------------------------
# Final Message
# -----------------------------
echo "[INFO] All steps completed successfully!"


After succesfully running a blast on all the sequences, they were identified to be Listeria monocytogenes. After carrying out a virulence analysis on the whole genome sequences by comparing it to the virulencs database, it was confirmed that none of the isolates harboured any toxin genes. As regards the antibacterial resistance profile of the isolates, all of them showed two resistance genes which were fosX which conferred the ability to resist the antibiotic fosfomycin and had a prevalence of 100 % across isolates and the other gene was lmo0919_fam which is a gene that serves as an efflux pump hence giving them a level of multidrug resistance and has a prevalence of 100%.
